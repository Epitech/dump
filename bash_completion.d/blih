#!/usr/bin/env bash

__blih_fill_repo() {
	if [[ -n "$BLIH_USER" && -n "$BLIH_TOKEN" ]] ; then
		local tmp=$(blih repository list)
		if [ "$?" -eq "0" ]; then
			echo "${tmp[*]}"
		fi
	fi
}

__blih_select_repo() {
	__blih_get_next_command
	if [ "$?" -eq "1" ];then 
		local repos=$(__blih_fill_repo)
		COMPREPLY=( $( compgen -W '${repos[*]}' -- $cur ) )
	fi
}

_blih_repository_getacl() {
	__blih_select_repo
}

_blih_repository_setacl() {
	__blih_select_repo
}

_blih_repository_info() {
	__blih_select_repo
}

_blih_repository_delete() {
	__blih_select_repo
}

_blih_repository_setacl() {
	__blih_get_next_command
	if [ "$?" -eq "1" ];then
		local repos=$(__blih_fill_repo)
		COMPREPLY=( $( compgen -W '${repos[*]}' -- $cur ) )
	fi
}

__blih_fill_sshkey() {
	if [[ -n "$BLIH_USER" && -n "$BLIH_TOKEN" ]] ; then
		local tmp=$(blih sshkey list)
		if [ "$?" -eq "0" ]; then
			cut -d ' ' -f 3 <<< $tmp
		fi
	fi
}

_blih_sshkey_delete() {
	__blih_get_next_command
	if [ "$?" -eq "1" ];then
		local keys=$(__blih_fill_sshkey)
		COMPREPLY=( $( compgen -W '${keys}' -- $cur ) )
	fi
}

_blih_sshkey() {
	local commands=(
		upload
		list
		delete
	)
	local options
	__blih_arg "_blih_sshkey"
}

_blih_repository() {
	local commands=(
		create
		delete
		info
		getacl
		list
		setacl
	)
	local options
	__blih_arg "_blih_repository"
	return 0
}

__blih_binary_flags() {
	local parts=( $1 )
	local IFS='|'
	local extglob=$( echo "${parts[*]}" )
	echo "@($extglob)"
}

__blih_get_next_command() {
	local binary_flags=$1
	local counter=$command_pos
	local in_arg=0
	(( counter++ ))
	while [ "$counter" -lt "$COMP_CWORD" ]; do
		case "${COMP_WORDS[$counter]}" in
			$(__blih_binary_flags "$binary_flags"))
				;;
			-*)
				in_arg=1
				flag=${COMP_WORDS[$counter]}
				;;
			*)
				if [ "$in_arg" -eq "0" ]; then
					command_pos=$counter
					command=${COMP_WORDS[$counter]}
					return 0
				fi
				in_arg=0
				;;
		esac
		(( counter++ ))
	done
	if [ "$in_arg" -ne "0" ]; then
		return 2
	fi
	return 1
}

__blih_arg() {
	__blih_get_next_command "$2"
	case $? in
		0)
			local completions_func=$1_${command//-/_}
			declare -F $completions_func >/dev/null && $completions_func
			;;
		1)
			case "$cur" in
				-*)
					COMPREPLY=( $( compgen -W '${options[*]}' -- $cur ) );;
				*)
					COMPREPLY=( $( compgen -W '${commands[*]}' -- $cur ) );;
			esac
			;;
		2)
			local completions_func=$1_${flag//-/_}
			declare -F $completions_func >/dev/null && $completions_func
	esac
}

_blih() {
	COMPREPLY=()
	local cur=${COMP_WORDS[COMP_CWORD]}
	local command
	local command_pos=0
	local flag

	local commands=(
		repository
		sshkey
		whoami
	)
	local options=(
		-u --user
		-v --verbose
		-b --baseurl
		-t --token
	)
	__blih_arg "_blih" "-v --verbose"
	return 0
}

complete -F _blih blih blih.py
